{"version":3,"sources":["webpack:///./src/components/container.tsx","webpack:///./src/components/footer.tsx","webpack:///./src/components/header.tsx","webpack:///./src/components/layout.tsx","webpack:///./src/pages/archive.tsx"],"names":["children","style","maxWidth","rhythm","marginLeft","marginRight","padding","fontSize","textAlign","marginTop","marginBottom","Date","getFullYear","to","color","background","display","flex","justifyContent","long","boxShadow","textDecoration","BlogIndex","data","location","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","edges","map","node","frontmatter","fields","slug","key","margin","date","pageQuery"],"mappings":"mIAQe,cAAyB,IAAtBA,EAAsB,EAAtBA,SAChB,OACE,mBACEC,MAAO,CACLC,SAAUC,YAAO,IACjBC,WAAY,OACZC,YAAa,OACbC,QAAYH,YAAO,EAAI,GAAhB,IAAsBA,YAAO,EAAI,KAGzCH,I,YCZQ,aACb,OACE,sBACEC,MAAO,CACLM,SAAU,OACVC,UAAW,SACXC,UAAWN,YAAO,GAClBO,aAAcP,YAAO,KAGvB,YAAC,EAAD,WACK,IAAIQ,MAAOC,cADhB,kBAC8C,IAC5C,YAAC,OAAD,CAAMC,GAAG,YAAYZ,MAAO,CAAEa,MAAO,YAArC,c,wBCVO,aACb,OACE,sBACEb,MAAO,CACLc,WAAY,UACZD,MAAO,YAGT,YAAC,EAAD,KACE,mBAAKb,MAAO,CAAEe,QAAS,SACrB,mBAAKf,MAAO,CAAEgB,KAAM,EAAGC,eAAgB,WACrC,YAAC,IAAD,CAAaC,MAAI,GACf,YAAC,OAAD,CACElB,MAAO,CACLmB,UAAW,OACXN,MAAO,UACPO,eAAgB,QAElBR,GAAE,KANJ,QAYJ,YAAC,IAAD,UCnBK,gBAAyB,IAAtBb,EAAsB,EAAtBA,SAChB,OACE,uBACE,YAAC,EAAD,MACA,oBACEC,MAAO,CACLQ,UAAWN,YAAO,KAGpB,YAAC,EAAD,KAAYH,IAEd,YAAC,EAAD,S,kCCxBN,2HAiEesB,UAnCG,SAAC,GAAwC,IAAtCC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,SACnBC,EAAYF,EAAKG,KAAKC,aAAaC,MACnCC,EAAQN,EAAKO,kBAAkBC,MAErC,OACE,YAAC,IAAD,CAAQP,SAAUA,EAAUI,MAAOH,GACjC,YAAC,IAAD,CAAKG,MAAOH,IACZ,2BACGI,EAAMG,KAAI,YAAc,IAAXC,EAAW,EAAXA,KACNL,EAAQK,EAAKC,YAAYN,OAASK,EAAKE,OAAOC,KACpD,OACE,uBAASC,IAAKJ,EAAKE,OAAOC,KAAMnC,MAAO,CAAES,aAAcP,YAAO,KAC5D,0BACE,kBAAIF,MAAO,CAAEqC,OAAQ,IACnB,YAAC,OAAD,CACErC,MAAO,CAAEoB,eAAgB,OAAQD,UAAW,QAC5CP,GAAIoB,EAAKE,OAAOC,MAEfR,IAGL,yBAAQK,EAAKC,YAAYK,WAKjC,qBAAOtC,MAAO,CAAEa,MAAO,SAAvB,yGAWD,IAAM0B,EAAY","file":"component---src-pages-archive-tsx-5e240991a13a2a354d05.js","sourcesContent":["import React from \"react\";\n\nimport { rhythm } from \"../utils/typography\";\n\ninterface Props {\n  children?: any;\n}\n\nexport default ({ children }: Props) => {\n  return (\n    <div\n      style={{\n        maxWidth: rhythm(28),\n        marginLeft: \"auto\",\n        marginRight: \"auto\",\n        padding: `${rhythm(1 / 8)} ${rhythm(3 / 4)}`,\n      }}\n    >\n      {children}\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Link } from \"gatsby\";\n\nimport Container from \"./container\";\nimport { rhythm } from \"../utils/typography\";\n\nexport default () => {\n  return (\n    <footer\n      style={{\n        fontSize: \"12px\",\n        textAlign: \"center\",\n        marginTop: rhythm(2),\n        marginBottom: rhythm(1),\n      }}\n    >\n      <Container>\n        © {new Date().getFullYear()} David Cramer —{\" \"}\n        <Link to=\"/archive/\" style={{ color: \"inherit\" }}>\n          Archive\n        </Link>\n      </Container>\n    </footer>\n  );\n};\n","import React from \"react\";\nimport { Link } from \"gatsby\";\n\nimport Container from \"./container\";\n\nimport HeaderLinks from \"./headerLinks\";\nimport HeaderTitle from \"./headerTitle\";\n\nexport default () => {\n  return (\n    <header\n      style={{\n        background: \"#6f5dbb\",\n        color: \"#ffffff\",\n      }}\n    >\n      <Container>\n        <div style={{ display: \"flex\" }}>\n          <div style={{ flex: 1, justifyContent: \"center\" }}>\n            <HeaderTitle long>\n              <Link\n                style={{\n                  boxShadow: `none`,\n                  color: `inherit`,\n                  textDecoration: \"none\",\n                }}\n                to={`/`}\n              >\n                DC\n              </Link>\n            </HeaderTitle>\n          </div>\n          <HeaderLinks />\n        </div>\n      </Container>\n    </header>\n  );\n};\n","import React from \"react\";\n\nimport Container from \"./container\";\nimport Footer from \"./footer\";\nimport Header from \"./header\";\nimport { rhythm } from \"../utils/typography\";\n\ninterface Props {\n  location: Location;\n  title: string;\n  children?: any;\n}\n\nexport default ({ children }: Props) => {\n  return (\n    <div>\n      <Header />\n      <main\n        style={{\n          marginTop: rhythm(1),\n        }}\n      >\n        <Container>{children}</Container>\n      </main>\n      <Footer />\n    </div>\n  );\n};\n","// Gatsby supports TypeScript natively!\nimport React from \"react\";\nimport { PageProps, Link, graphql } from \"gatsby\";\n\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\nimport { rhythm } from \"../utils/typography\";\n\ntype Data = {\n  site: {\n    siteMetadata: {\n      title: string;\n    };\n  };\n  allMarkdownRemark: {\n    edges: {\n      node: {\n        excerpt: string;\n        frontmatter: {\n          title: string;\n          date: string;\n        };\n        fields: {\n          slug: string;\n        };\n      };\n    }[];\n  };\n};\n\nconst BlogIndex = ({ data, location }: PageProps<Data>) => {\n  const siteTitle = data.site.siteMetadata.title;\n  const posts = data.allMarkdownRemark.edges;\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO title={siteTitle} />\n      <section>\n        {posts.map(({ node }) => {\n          const title = node.frontmatter.title || node.fields.slug;\n          return (\n            <article key={node.fields.slug} style={{ marginBottom: rhythm(1) }}>\n              <header>\n                <h3 style={{ margin: 0 }}>\n                  <Link\n                    style={{ textDecoration: \"none\", boxShadow: `none` }}\n                    to={node.fields.slug}\n                  >\n                    {title}\n                  </Link>\n                </h3>\n                <small>{node.frontmatter.date}</small>\n              </header>\n            </article>\n          );\n        })}\n        <small style={{ color: \"#999\" }}>\n          I've archived posts older than 2020. If you found something useful,\n          and it's missing, let me know!\n        </small>\n      </section>\n    </Layout>\n  );\n};\n\nexport default BlogIndex;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}